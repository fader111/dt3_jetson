"Компетентность - это знание пределов своих способностей."
Метод Фейнмана.

Детектор транспорта на основе DL, платформа Jetson nano, детектирование на основе jetson inference. 
в других документах wiki - старые версии проектов детектра пешеходов, но которых базируется текущий проект. 
Идея - использовать cnn для распознавания машин, параллельно используя трекер из opencv(scrt?) и далее:
	строить трек используя выдачи детектора, с каждым новым кадром добавляя в него рамки с максимальным iot с последней рамкой трека. параллельно начинать с первого задетектированного объекта строить трек трекером. подменяя точки трека вычисленные трекером, точками центров рамок детектора. если нет удовлеворительного кандитата на продолжение трека из выдачи детектора, то взять рамку из трека. 
	
	что это даст (если вообще это зайдет):
		трекер хорош тем, что не пропускает рамки, он быстрый. 
		плох тем, что не всегда корректно видит рамку в конце трека - она смещается и некорректно позиционируется. 
		детектор хорош тем, что корректно рисует рамки на всем протяжении трека. 
		плох тем, что иногда пропускает рамки. 
	далее надо думать над применением фильтра для сглаживания получившихся треков. (Kalman?)
потом рисуем в кадре линии пересечения и по ним определяем срабатывание. детектора. 

Делаю трекер. Имею прямоугольники из детектора. для каждого прямоугла из картинки:
	пытаюсь приладить его последовательно к каждому из существующих треков с помощью алгоритма IoU.
	- если подошел к концу какого-то трека, аппенд его в конец трека, перехожу к другому прямоуглу.
	- если не подошел ни к одному треку, создаю новый трек, и помещаю прямоугл ему в конец, перехожу к новому прямоуглу.
	- т.о. все прямоуглы оказываются пристороенными.

	вопросы по ходу дела - а нужно-ли хранить в треке ббоксы или только точки их центров?
	- за боксы есть аргумент - когда надо будет сращивать трекер с детектором
		подробнее: как это работает: детектор пропустил ббокс. трекер должен на его место вставить свой. (или достаточно вставить точку?)
		думаем...

	- против боксов - они там в итоге не нужны вроде-бы, если трек строится только трекером
	- SOLVED - упустил из виду, что нужно в ббоксах искать пластины. так что боксы сохраняем. 
	- сделал poins - список точек трека в каждом экземпляре. по нему пока точки треков не строятся.
		возможная причина - аппенд точек треков происходит в разных местах. отследить это дело
		
		!!!!!!!!!!!!!

Итог: сделал детектирование на Jetson Inference. Трекер на основе dlib. Детектор срабатывет раз в 3 сек.
после чего трекер подхватывает координаты bbox'а и ведет его до срабатывания следующего детектора.
таждому треку соответствует свой экзаемпляр класса "трек". В экземпляре лежат Id трека, координаты его точек, 
координаты его bbox'ов и пр. Каждый раз при срабатывании детектора трекер в экземпляре удаляется и создается новый из координат, 
которые выдал детектор. Удалять приходится, т.к. у трекера нет метода "обновить".



toDo:
	алгоритм обнаружения автомобилей, который может обнаруживать автомобили, определять их параметры:
	- интенсивность транспортного потока
	- скорость
	- время пребывания в зоне
	- типы автомобилей и плотность транспортного потока 
	- web 
	- таймеры для перезагрузки и аппаратный wdt

	подробнее:
		- сделать рамки
			- обрывать треки, если площадь ббокса слишком маленькая - это очень удаленные объекты, 
				от которых нет никакого толка, но они плодят треки и грузят систему.  

- проблема: не работает передача данных полигонов в основной процесс, если не работает web,
	т.к. put в очередь рамок выполняется из метода updatePoly() из web_main 
	надо выяснить, можно-ли вызывать методы предназначенные для фласка не из web'a.

		- рамки рисовать на картинке и убирать их из web'а после сохранения. 
			- до сохранения не рисовать на питонской картинке, а только в webе рисовать 
				иначе они накладываются друг на друга и некрасиво. 
		- кнопка удалить все не удаляет

		- setDefaultIpSettings в dt2 работают по таймеру. Вызов некорректно запихнут в updatePolyFromServer
			- переделать чтобы запускалось по прерыванию от кнопки. 
		- разобраться что за ерунда переменная ipStatus в dt3_web_main строка 30. 
		- убирать алерт о редактировании только в режиме редактирования через 5 сек.
		- сделать передачу данных по проездам. 
		- ( потом ) сделать bootstrap вспллывающие хинты для информации о режиме редактирования и предупреждениях.
			( DONE )пока отключил существующие подсказки, т.к. они смещают зону рисования вниз и мешают
			рисовать рамки. 
			div id="zeroPolyAlert"
			<div id="editModeAlert"
		- нанести координатную сетку на дорогу для определения перемещания/скорости.
		- ( сильно потом??? ) из dp.js взять логику работы setInterval. и применить.?? подумать зачем. 
		
    ( DONE ) - подправить строку состояния в кадре видео. Сделать одну 
    ( DONE ) - выровнять картинку по центру 
    ( DONE ) - сделать чтобы рамки сохранялись.
    ( DONE ) - сделать трекер пока только на основе детектора( см выше ) 
	( DONE ) - сделать полосочки между точками трека.
    ( DONE ) - подключить камеру sci 
    ( DONE ) - рисовать стрелки на рамках сервака
	( DONE ) - убрать режим дебаг и перезагрузка из фласка
	( DONE ) - сделать функционал, чтобы они срабатывали при пересечении с трекером
				( DONE ) - пробуем: если хоть одна точка трека в зоне детектирования, срабатываем зону. 
					( DONE ) так плохо, сделаем по-другому:, будем считать IoU последнего ббокса с рамкой.
					( DONE ) используя класс shapely 
	( DONE ) - нарисовать номера рамок на питон картинке.  
				( DONE ) - цвет рамки распространить на стрелки 

	( DONE ) делать классы рамок, перетаскивать в них имеющийся функционал, 
		( DONE ) - полигоны 
		( DONE ) - стрелки
	( DONE ) - сработку сделать только на машины автобусы траки и мотоциклы
	( DONE ) - может рамки сделать классом и туда складывать все их данные. 
		а то массивов расплодилось их несметное. ареа надо считать каждый раз. а еще 
		будет подсчет скорости, длины там и прочее...
	( DONE ) 	- нужна доработка т.к. не все рамки всегда срабатывают когда в них машина
					- возможно проблема связана с тем что возникаящие на изображении рамки треки и 
						и др. служебная инфа сбивает трекер. т.к. без рамок все лучше. 
						(нет, не в этом) проблема была из -за того что при касании ббоксом
						края кадра, он оставался последним в треке на момент касания, 
						и с ним шло сравнение. если рамка близко к краю, рамка срабатывала 
						из-за этого последнего зависшего в треке ббокса.
						решилось доп проверкой на завершенность трека при принятии решения о срабатывании
						рамки.

										
					- мало искать интерсекшн, нужно еще пррверять нет-ли точки трека в зоне, 
						иначе срабатывают соседние рамки, когда на них наползает bbox
					

Разное:
    - для проверки настроить стриминг видео на винде и стримить в сеть а джетсоном ловить поток 
		- ( с этим почему-то дикие траблы ) - можно сделать только на лине - через ffstream, vlc не работает. 
		 ( вариант не работает хз почему, ошибка в плеере, лог пустой ).
	- мысли как избавиться от механизма, когда ф-ция updatePolyFromServer запускается периодически:
		- почему от нее надо избавиться: она требует отдельного таймера и грузит проц. 
			вроде несильно, т.к. если рамки не поменялись, то она не идет дальше проверки. 
				- когда надо обновлять рамки на сервере? - когда они изменились. измениться они могут 
					при нажатии сохранить, при срабатывании ф-ции js sendPolyToServer. этому урлу 
					соотв-ет функция фласка.
					не из нее-ли надо вызывать обновление рамок на сервере? проверки лучше оставить, 
					т.к. сохранить можно нажать и не сделав никаких изменений. 
					- почему я все-таки сделал раньше эту функцию?? была какая-то причина?
						- похоже это наследие php когда все делалось только через файл.
					- ( DONE )рамки не в масштабе. полигоны не вызываются если не редактировались ни разу	