"Компетентность - это знание пределов своих способностей."
Метод Фейнмана.

Детектор транспорта на основе DL, платформа Jetson nano, детектирование на основе jetson inference. 
в других документах wiki - старые версии проектов детектра пешеходов, но которых базируется текущий проект. 

Описание архитектуры: 
	- есть основной процесс в котором запускается flask( файл dt2_web-main.py ) параллельно ему запускается 
		процесс, в котором крутится нейросеть и остальные вычисления( файл main_proc_dlib.py)
	
	- при старте программы вычислительный процесс читает настройки из файла settings.dat и конфиг зон 
		из файла polygones.dat
	
	- вычислительный процесс имеет 3 очереди 
		- очередь q_pict - в нее из выч процесса суются картинки для отображения в web.
		- очередь q_ramki - в нее из web процесса суются зоны детектирования - ('это json структура вида такого-же
			как она хранится в файле polygones.dat), если пользак изменил их на web клиенте, либо изменил 
			стрелки для зон детектирования. 
			В вычислительном процессе эта очередь проверяется на непустоту, если она не пустая, 
			то список ramki_scaled обнуляется и в него напихиваются новые экземпляры класса Ramka.
		- очередь q_settings при изменении настроек параметров детектирования из web клиента, в нее суются 
			новые параметры, получаемые методами фласка. также как и с q_ramki она проверяется в выч процессе 
			на непустоту и обновляются настройки в выч. процессе.
	- 


Идея - использовать cnn для распознавания машин, параллельно используя трекер из opencv(scrt? yа самом деле зашел dlib) и далее:
	строить трек используя выдачи детектора, с каждым новым кадром добавляя в него рамки с максимальным iot с последней рамкой трека. параллельно начинать с первого задетектированного объекта строить трек трекером. подменяя точки трека вычисленные трекером, точками центров рамок детектора. если нет удовлеворительного кандитата на продолжение трека из выдачи детектора, то взять рамку из трека. 
	
	что это даст (если вообще это зайдет):
		трекер хорош тем, что не пропускает рамки, он быстрый. 
		плох тем, что не всегда корректно видит рамку в конце трека - она смещается и некорректно позиционируется. 
		детектор хорош тем, что корректно рисует рамки на всем протяжении трека. 
		плох тем, что иногда пропускает рамки. 
	далее надо думать над применением фильтра для сглаживания получившихся треков. (Kalman?)
потом рисуем в кадре линии пересечения и по ним определяем срабатывание. детектора. 

Делаю трекер. Имею прямоугольники из детектора. для каждого прямоугла из картинки:
	пытаюсь приладить его последовательно к каждому из существующих треков с помощью алгоритма IoU.
	- если подошел к концу какого-то трека, аппенд его в конец трека, перехожу к другому прямоуглу.
	- если не подошел ни к одному треку, создаю новый трек, и помещаю прямоугл ему в конец, перехожу к новому прямоуглу.
	- т.о. все прямоуглы оказываются пристороенными.

	вопросы по ходу дела - а нужно-ли хранить в треке ббоксы или только точки их центров?
	- за боксы есть аргумент - когда надо будет сращивать трекер с детектором
		подробнее: как это работает: детектор пропустил ббокс. трекер должен на его место вставить свой. (или достаточно вставить точку?)
		думаем...

	- против боксов - они там в итоге не нужны вроде-бы, если трек строится только трекером
	- SOLVED - упустил из виду, что нужно в ббоксах искать пластины. так что боксы сохраняем. 
	- сделал poins - список точек трека в каждом экземпляре. по нему пока точки треков не строятся.
		возможная причина - аппенд точек треков происходит в разных местах. отследить это дело
		
		!!!!!!!!!!!!!

Итог: сделал детектирование на Jetson Inference. Трекер на основе dlib. Детектор срабатывет раз в 3 сек.
после чего трекер подхватывает координаты bbox'а и ведет его до срабатывания следующего детектора.
таждому треку соответствует свой экзаемпляр класса "трек". В экземпляре лежат Id трека, координаты его точек, 
координаты его bbox'ов и пр. Каждый раз при срабатывании детектора трекер в экземпляре удаляется и создается новый из координат, 
которые выдал детектор. Удалять приходится, т.к. у трекера нет метода "обновить".

была проблема! при изменении полигона в процессе работы во всех рамках искажаются верхние и 
	и нижние границы в метрах
	наблюдение - это же происходит при включении сайта. 
	!!!!!границы в метрах не обновляются при изменении настроек длины калибровочного полигона.
	при изменении длины калибр_полигона updatePoly вызывает передачу данных полигоннов в очередь 
	для передачи полигонов в выч процесс, но там оказываются старые настройки длины полигона settings 
	что делать: 
		- Передавать в очереди вместе с полигонами новые длины калиб_полигона?
	до этого я пытался в sendSettingsToServer фласк процесса передавать settings раньше полигонов. 
	однако, при запуске обновлялки полигонов по признаку непустой очереди, в теле самой обновлялки
	настройки длины калибровочного полигона оставались старыми. почему? ведь settings должны быть уже обновлены на этот момент. 
	может очередь настроек более медленная чем полигонов? и настройки просто не успевают обновиться.? 
	!!!!выяснил - очередь полигонов успевает проскочить раньше очереди настроек, 
	не смотря на то, что обновляется позже. при этом в полигонах оказываются старые значения. 
	задержка работает. сейчас установлено в 1 секунду
	возможно лучшей идеей будет передавать новые данные по длине калибровочного полигона вместе срамками зон детекции. 
	тогда ошибки не страшны. и присутствует некая логика - все полигоны в одном месте. либо вообще и пошигоны и настройки в одной очереди и в одном файле
	возможно переделаю в будущем. 

была проблема! если в режиме редактирвоания рамок изменить длину калибровочного полигона, 
	творятся плохие вещи - внешне выглядит как рамка в вебе есть а выч процессе ее нет, либо наоборот. 
	попробую решение: перед тем как делать любые изменения по нажатию кнопки сохранить в модальном окне настройки, 
	надо завершить режим редактирования рамок. причем просто сменить editMode, недостаточно. надо вызывать функцию, орабатывающую нажатие на кнопку сохранения настроек. 
	проблему вызов функции не решает.
	Решилось считыванием новых рамок из файла каждый раз при отправке настроек на сервер. 
	так работает. 

была проблема: при удалении калибровочнго полигона и рисовании нового не настраиваются правильно рамки.
	( может запретить удалять калибровочный по даблклику?) запретил. все ок. 

TODO:
	алгоритм обнаружения автомобилей, который может обнаруживать автомобили, определять их параметры:
	- интенсивность транспортного потока
	( DONE )- скорость
	- время пребывания в зоне
	- типы автомобилей и плотность транспортного потока 
	- web   
	- таймеры для перезагрузки и аппаратный wdt

	подробнее:

		- сделать передачу json структуры с параметрами потока по запросу клиента (Согласовать с Лешей.)(согласовано)
		
		Для этого надо сделать скорость, интенсивность, время пребывания в зоне. 
		Делаем скорость: 
								
		- делаем таблицу со статистикой по зонам справа от картинки как было в dt2.
		- делаем передачу данных потока по запросу от асудд.
 
			Формат обмена с диспетчерской системой: POST JSON 
			{ 
  				"avg_speed": [ 55, 60, .... 100 ],
  				"vehicle_types_intensity": [{"bus": 10, "truck": 20, "car": 50}, ...],
  				"intensity": [200, 300, ...], 
  				"avg_time_in_zone": [1, 2, ...]
			}
			- передать данные из выч процесса по запросу очередью. готовить все данные в выч процессе
				передавать уже готовые обработанные скользящим окном.
				так же как было сделано для полигонов и настроек из web процесса в выч. процесс,
				только теперь в обратную сторону - это очереди q_status15 и q_status60
			- взять скорость из треков и сунуть в рамки.
				- в рамке сделать setInterval, в нем раз в минуту добавлять среднюю скорость из треков, 
				- сделать массив значений сред скорости в пределах минуты, добавляя туда среднюю 
					скорость каждого трека. (делать это в выч процессе) длина не лимитирована, зависит от того, 
					сколько машин в минуту будет в рамке. 
					Раз в минуту этот массив пихать в speeds_60, потом обнулять его. последнюю черверть speeds_60 
					будет составлять speeds_15.
			- что готово: 
				переменная статус в экземпляре рамки.
				- надо ее теперь сувать из выч процесса в web процесс. 
					в питоше 3.7 нет других возможностей взаимодействия, кроме очереди и пайпа. 
					пайп - двунаправленный. в топку. 
					при передаче картинок или настроек из веба в выч. процесс очередь обновляется по схеме:
						- заход в функцию  в web процессе, привязанную к URL приводит к пушингу в очередь. 
							в выч процессе каждый цикл эта очередь проверяется на непустоту.
							если она не пустая, то вычитывается и данные выч процесса обновляются 
							в соотв. с теми данными, что пришли из очереди. 
					при передаче из выч процесса есть особенности. 
						- направление передачи другое. 
						- в очереди должны оказываться только актуальные данные. 
							передающий процесс должен следить за тем, чтобы там был
							только один элемент в очереди.
							если этот один элемент протух - не был своевременно востребован, 
							то передающая сторона должна его оттуда удалить, и поместить на его место 
							свежий.
						- понять где в коде место, в котором должно быть обновление данных статуса.
						- понять в какой момент должно происходить обновление статуса. 
							видимо раз в минуту по тикеру внутри экземпляра класса рамка.?
							т.е. нужно просто сравнивать содержимое ramka.status с самим 
							собой из предыдущего цикла.....
							
							лучше конечно обновлять содержимое status в выч процессе по инициативе 
							экземпляра рамки. но как это сделать...
							сделал так: убрал тред setInterval, котрый запускал слайдинг виндов из экземпляра 
								рамки, сделал его один для всех рамок в майн процессе,
								теперь там буду обновлять status60 и status15.
				Итоговая реализация:
					все параметры потока будем измерять раз в минуту по сработке setInterval
					в секции где рамкам назначаются цвета, при проезде трека в рамке, 
					его средняя скорость передается в рамку.
					раз в минуту setInterval в главном потоке запускает слайдинг виндов
					метод. в котором из всех накопленных за минуту скоростей треков вычисляется среднее 
					арифметическое. это среднее суется в массив из 60 скоростей в конец. первое при этом удаляется.
					потом из этого массива считается среднее арифметическое за час, а из его последних 15-ти минут -
					среднее за 15 минут.

					- интенсивность по зонам пока сделаю неприведенную ( обычно приводят к легковым)
						автомобилей в час. 
						варианты расчета интенсивности: 
							- раз в 1 мин. 
								тогда возможны большие колебания значений. 
							- раз в другой интервал времени.
								добавлять в специально выделенную для этого переменную класса 
								рамки факты проезда, считать минутные интервалы. 
							- пока остановлюсь на раз в минуту
					- в слайдин виндов считаем количество 
								

					сделаем так: 
						- при обращении к URL web api в web процессе, вычитываем из очереди.
							если она пустая, и ранее не вычитывалась ( первый цикл работы прогрммы), 
							то подсовываем ей пустые значения полей. ждем пока выч процесс, 
							сунет что-то в очередь. 
							если не пустая, отвечаем тем, что есть в очереди, одновременно суем это
							значение в локальную переменную status, на случай, если очередь выбрана, 
							( при частом обращении к ней), и если в этом случае очередь пустая, 
							то суем запросу не содержимое очереди, а этой локальной переменной.
							
							выч процесс обеспечивает очередь актуальными данными, и следит 
							при пушинге, чтобы там было только одно актуальное значение. 
							в выч процессе проверяем очередь каждый цикл, если она пустая, суем в нее
							текущий статус. air flow


			- сделать интенсивность ( как считать интенсивность?)
			- сделать интенсивность по типам в рамках. ( а где у нас типы? в рамках? в треках?)
			- сделать среднее время в зоне
				в класс рамки добавить тайм стамп который вкл когда сработало, и выкл когда выключилось
				рулить этим процессом из вычислительного процесса
					из места где обновляются статусы рамок ( цвета ), т.к. внутри класса ничего подходя
				щего для этой задачи нет. 
				- в самом классе сделать поля 
					- время пребывания в рамке последнего проезда ( в секундах )
						каждое событие срабатывания рамки обновлять это значение. 
					- очередь из 60-ти значений времени пребывания для скользащего окна
					- среднее значение для 60 минут, 
					- среднее значение для 15 минут
				- в осн процессе сделать в сет интервале обновление данных как для интенсивности.


			- сделать рамки
				- обрывать треки, если площадь ббокса слишком маленькая - это очень удаленные объекты, 
					от которых нет никакого толка, но они плодят треки и грузят систему.  


		- рамки рисовать на картинке и убирать их из web'а после сохранения. 
			- до сохранения не рисовать на питонской картинке, а только в webе рисовать 
				иначе они накладываются друг на друга и некрасиво. 
	

		- setDefaultIpSettings в dt2 работают по таймеру. Вызов некорректно запихнут в updatePolyFromServer
			- переделать чтобы запускалось по прерыванию от кнопки. 
		- разобраться что за ерунда переменная ipStatus в dt3_web_main строка 30. 
		- убирать алерт о редактировании только в режиме редактирования через 5 сек.
		- ( потом ) сделать bootstrap вспллывающие хинты для информации о режиме редактирования и предупреждениях.
	( DONE )пока отключил существующие подсказки, т.к. они смещают зону рисования вниз и мешают
			рисовать рамки. 
			div id="zeroPolyAlert"
			<div id="editModeAlert"
		- нанести координатную сетку на дорогу для определения перемещания/скорости.
		- ( сильно потом??? ) из dp.js взять логику работы setInterval. и применить.?? подумать зачем. 
		
    ( DONE ) - подправить строку состояния в кадре видео. Сделать одну 
    ( DONE ) - выровнять картинку по центру 
    ( DONE ) - сделать чтобы рамки сохранялись.
    ( DONE ) - сделать трекер пока только на основе детектора( см выше ) 
	( DONE ) - сделать полосочки между точками трека.
    ( DONE ) - подключить камеру sci 
    ( DONE ) - рисовать стрелки на рамках сервака
	( DONE ) - убрать режим дебаг и перезагрузка из фласка
	( DONE ) - сделать функционал, чтобы они срабатывали при пересечении с трекером
				( DONE ) - пробуем: если хоть одна точка трека в зоне детектирования, срабатываем зону. 
					( DONE ) так плохо, сделаем по-другому:, будем считать IoU последнего ббокса с рамкой.
					( DONE ) используя класс shapely 
	( DONE ) - нарисовать номера рамок на питон картинке.  
				( DONE ) - цвет рамки распространить на стрелки 

	( DONE ) делать классы рамок, перетаскивать в них имеющийся функционал, 
		( DONE ) - полигоны 
		( DONE ) - стрелки
	( DONE ) - сработку сделать только на машины автобусы траки и мотоциклы
	( DONE ) - может рамки сделать классом и туда складывать все их данные. 
		а то массивов расплодилось их несметное. ареа надо считать каждый раз. а еще 
		будет подсчет скорости, длины там и прочее...
	( DONE ) 	- нужна доработка т.к. не все рамки всегда срабатывают когда в них машина
					- возможно проблема связана с тем что возникаящие на изображении рамки треки и 
						и др. служебная инфа сбивает трекер. т.к. без рамок все лучше. 
						(нет, не в этом) проблема была из -за того что при касании ббоксом
						края кадра, он оставался последним в треке на момент касания, 
						и с ним шло сравнение. если рамка близко к краю, рамка срабатывала 
						из-за этого последнего зависшего в треке ббокса.
						решилось доп проверкой на завершенность трека при принятии решения о срабатывании
						рамки.
					- мало искать интерсекшн, нужно еще пррверять нет-ли точки трека в зоне, 
						иначе срабатывают соседние рамки, когда на них наползает bbox
	( DONE )- проблема: не работает передача данных полигонов в основной процесс, если не работает 
	( DONE ) - сделать передачу статусов по своей инициативе. (раз в 400 мс)
						- ( DONE ) потом вычислить все координаты середины зоны детекции и потом на основе этих зон
						( может их классов сразу -( да ,лучше так ) и измерять скорость в рамке)			
			( DONE ) - сделать кнопку на главной "сохранить калибровку".
			( DONE ) - передать данные полигона по этой кнопке на сервер
				( DONE ) - отдать данные полигона в функцию посылки на сервер
				( DONE ) - удалить полигон из weba ( не удалить а не отображать. 
							если удалить, возникает куча проблем, проще его скрыть)
			( DONE ) - подумать про ввод данных расстояний с web ( видимо в таблице задавать, 
						а потом дальности на прямоугольнике рисовать)
			( DONE ) - при нажатии на кнопку калибровки загружать с сервера полигон, если там пусто, то рисовать дефолтный. 
			( DONE ) - при нажатии на сохранить калибровку, отправлять калибровочный полигон на сервер, и там сохранять 
					в настройках(settings.dat)
			( DONE ) -  при старте системы считывать калибровочный полигон из файла и передавать его в web по аналогии как это 
					сделано для полигонов зон детекции. 

			- ( DONE ) наносим сетку в виде полигона на дорогу. знаем ее расстояние по x и y/
			    - ( DONE )нарисовали warped калибровочный полигон. Посчитали матрицу трансформации. вроде все есть для того чтобы 
					считать скорость, для этого:
						- ( DONE )надо вытащить из transform.py файла матрицу трансформации и длину варпед картинки
						( DONE ) - затем посчитать координаты точек середин сторон рамок, которые лежат перпендикулярно движению
						- ( DONE )надо рассичитать как далеко от края калибровочного полигона находятся границы рамки, (калибровать рамку)
							как только обновились полигоны и при старте, но 
							не понятно как быть, если полигоны есть, а калибровки дороги нет. 
								- НЕТ (это плохо) то-ли не давать рисовать полигоны, если нет калибровки, 
									- тогда ДТ в качестве Тип 1 не работает
		!!!!					- ДА то-ли давать рисовать полигоны, но скорость тогда считаться не будет 
									и обновлять координаты краев полигонов в метрах после завершения калибровки
									а при инициализации рамки ставить в эти параметры дальностей до краев нули.
			- рассмотреть случаи:
				- программа работает, рамки добавляются, удаляются. ( ну похоже что все ок. )
					- при инициализации рамки она калибруется ее конструктором.
				- программа работает, калибровочный полигон удаляется, добавляется, изменяется. 
		!!!!		- каждый раз после редактирования полигона запускается процедура обновления калибровки всех рамок. 
					- та же процедура запускается при изменении из web интерфейса длины и ширины калибровочного полигона.
			- сделать процедуру методом класса Ramki??
			- ( DONE ) кнопка удалить все не удаляет
	( DONE )- нарисовать калибровочный полигон в питоне
			- ?? надо-ли? может потом?? надо нарисовать сетку и расставить на ней дальности? 
		( так не срослось. сделал фиксацию скорости в треке.)- при пересечении автомобилем первой линии зоны, фиксируем время, при пересечении 
			второй тоже, делим длину зоны на полученное время, получаем скорость
				- складываем эту скорость в экземпляре класса рамки и 
					там-же реализуем подсчет за 15мин и за час. с помощью скользащего среднего
					пример скользящего среднего берем из dt2.
				- пересчение автомобилем фиксируем с помощью шапели - последняя точка трека внутри полигона-
					старт отсчета времени, последняя точка трека вне полигона - выехали, стоп отсчета.
						там-же считаем среднее время пребывания в зоне.
	( DONE )- 0. придумать алгоритм сопоставления координат в кадре в px ккординатам в метрах
				- 1. Делать сетку на картинке по типу полигона. вычислять длину полигона по сетке в метрах.
					- используемм встроенный функционал opencv
							M = cv2.getPerspectiveTransform(rect, dst)
							warped = cv2.warpPerspective(image, M, (maxWidth, maxHeight))
 
		
Разное:
    - для проверки настроить стриминг видео на винде и стримить в сеть а джетсоном ловить поток 
		- ( с этим почему-то дикие траблы ) - можно сделать только на лине - через ffstream, vlc не работает. 
		 ( вариант не работает хз почему, ошибка в плеере, лог пустой ).
	- мысли как избавиться от механизма, когда ф-ция updatePolyFromServer запускается периодически:
		- почему от нее надо избавиться: она требует отдельного таймера и грузит проц. 
			вроде несильно, т.к. если рамки не поменялись, то она не идет дальше проверки. 
				- когда надо обновлять рамки на сервере? - когда они изменились. измениться они могут 
					при нажатии сохранить, при срабатывании ф-ции js sendPolyToServer. этому урлу 
					соотв-ет функция фласка.
					не из нее-ли надо вызывать обновление рамок на сервере? проверки лучше оставить, 
					т.к. сохранить можно нажать и не сделав никаких изменений. 
					- почему я все-таки сделал раньше эту функцию?? была какая-то причина?
						- похоже это наследие php когда все делалось только через файл.
					- ( DONE )рамки не в масштабе. полигоны не вызываются если не редактировались ни разу	
	- описание технологии по которой делал:
	
		- сделать передачу данных по проездам в наружу. передавать будем 2 json структуры 
			в первой будет текущий статус и она будет шустрая. сервер будет отдавать по циклотаймеру 
			во второй будет статистика - будет отвечать по запросу клиента.(леши Жаркова)
			передача обоих будет происходить из main_proc процесса. раньше было не так, 
			там использовались очереди. передающие постоянно из web  процесса в main процесс. 
			но в этом нет смысла, если можно все из main_proc передавать.
			только нужно процессу сообщить адрес шлюза при его смене и при старте.
			вот это можно очередью делать. она будет работать лишь несколько раз при изменении 
			( т.е. при наладке) и больше нет.
			все аналогичто работе очереди рамок: при старте читает из файла, из системы, 
			далее проверяет очередь сетевых настроек ( или вообще всех настроек???)
			на наличие обновлений. при изменении из веба в эту очеред пушатся новые настройки, 
			после попадания их туда, main proc их вычитывает и применяет 
